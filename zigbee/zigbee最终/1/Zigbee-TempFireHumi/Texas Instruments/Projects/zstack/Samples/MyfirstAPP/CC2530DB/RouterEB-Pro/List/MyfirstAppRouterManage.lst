###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.3.10338/W32 for 8051         19/Jun/2019  14:37:13 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\fangxi1998\Desktop\课程设计\zigbee        #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\So #
#                          urce\MyfirstAppRouterManage.c                      #
#    Command line       =  -f "C:\Users\fangxi1998\Desktop\课程设计\zigbee    #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\Tools\CC2530DB\f8wRouter.cfg"      #
#                          (-DCPU32MHZ -DROOT=__near_func                     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE -DRTR_NWK         #
#                          -DBLINK_LEDS) -f "C:\Users\fangxi1998\Desktop\课程 #
#                          设计\zigbee 嵌入式linux\zigbee最终\1\Zigbee-TempFi #
#                          reHumi\Texas Instruments\Projects\zstack\Samples\M #
#                          yfirstAPP\CC2530DB\..\..\..\Tools\CC2530DB\f8wConf #
#                          ig.cfg" (-DSECURE=0 -DZG_SECURE_DYNAMIC=0          #
#                          -DREFLECTOR -DDEFAULT_CHANLIST=0x04000000          #
#                          -DZDAPP_CONFIG_PAN_ID=0xA1B2                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116 "-DCONST=const __code"    #
#                          -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE     #
#                          -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100            #
#                          -DRESPONSE_POLL_RATE=100) -DREJOIN_POLL_RATE=440   #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\So #
#                          urce\MyfirstAppRouterManage.c" -D ZIGBEEPRO -D     #
#                          ZTOOL_P1 -D MT_TASK -D MT_SYS_FUNC -D MT_ZDO_FUNC  #
#                          -D LCD_SUPPORTED=DEBUG -lC                         #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\RouterEB-Pro\List\" -lA                     #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\RouterEB-Pro\List\" --diag_suppress         #
#                          Pe001,Pa010 -o "C:\Users\fangxi1998\Desktop\课程设 #
#                          计\zigbee 嵌入式linux\zigbee最终\1\Zigbee-TempFire #
#                          Humi\Texas Instruments\Projects\zstack\Samples\Myf #
#                          irstAPP\CC2530DB\RouterEB-Pro\Obj\" -e --debug     #
#                          --core=plain --dptr=16,1 --data_model=large        #
#                          --code_model=banked --calling_convention=xdata_ree #
#                          ntrant --place_constants=data_rom                  #
#                          --nr_virtual_regs 8 -I "C:\Users\fangxi1998\Deskto #
#                          p\课程设计\zigbee 嵌入式linux\zigbee最终\1\Zigbee- #
#                          TempFireHumi\Texas Instruments\Projects\zstack\Sam #
#                          ples\MyfirstAPP\CC2530DB\" -I                      #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\SOURCE\" -I "C:\Users\fangxi1998\Desktop #
#                          \课程设计\zigbee 嵌入式linux\zigbee最终\1\Zigbee-T #
#                          empFireHumi\Texas Instruments\Projects\zstack\Samp #
#                          les\MyfirstAPP\CC2530DB\..\..\..\ZMAIN\TI2530DB\"  #
#                          -I "C:\Users\fangxi1998\Desktop\课程设计\zigbee    #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\MT\" -I           #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\HAL\INCLUDE\" -I  #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\HAL\TARGET\CC2530 #
#                          EB\" -I "C:\Users\fangxi1998\Desktop\课程设计\zigb #
#                          ee 嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Te #
#                          xas Instruments\Projects\zstack\Samples\MyfirstAPP #
#                          \CC2530DB\..\..\..\..\..\COMPONENTS\OSAL\MCU\CCSOC #
#                          \" -I "C:\Users\fangxi1998\Desktop\课程设计\zigbee #
#                           嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texa #
#                          s Instruments\Projects\zstack\Samples\MyfirstAPP\C #
#                          C2530DB\..\..\..\..\..\COMPONENTS\OSAL\INCLUDE\"   #
#                          -I "C:\Users\fangxi1998\Desktop\课程设计\zigbee    #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\STACK\AF\" -I     #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\STACK\NWK\" -I    #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\STACK\SEC\" -I    #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\STACK\SAPI\" -I   #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\STACK\SYS\" -I    #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\STACK\ZDO\" -I    #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\ZMAC\F8W\" -I     #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\ZMAC\" -I         #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SADDR\"  #
#                          -I "C:\Users\fangxi1998\Desktop\课程设计\zigbee    #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\SERVICES\SDATA\"  #
#                          -I "C:\Users\fangxi1998\Desktop\课程设计\zigbee    #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\MAC\INCLUDE\" -I  #
#                          "C:\Users\fangxi1998\Desktop\课程设计\zigbee       #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\MAC\HIGH_LEVEL\"  #
#                          -I "C:\Users\fangxi1998\Desktop\课程设计\zigbee    #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\srf #
#                          04\" -I "C:\Users\fangxi1998\Desktop\课程设计\zigb #
#                          ee 嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Te #
#                          xas Instruments\Projects\zstack\Samples\MyfirstAPP #
#                          \CC2530DB\..\..\..\..\..\COMPONENTS\MAC\LOW_LEVEL\ #
#                          srf04\SINGLE_CHIP\" -Ohz                           #
#    List file          =  C:\Users\fangxi1998\Desktop\课程设计\zigbee        #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\RouterEB-Pro\List\MyfirstAppRouterManage.ls #
#                          t                                                  #
#    Object file        =  C:\Users\fangxi1998\Desktop\课程设计\zigbee        #
#                          嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas #
#                           Instruments\Projects\zstack\Samples\MyfirstAPP\CC #
#                          2530DB\RouterEB-Pro\Obj\MyfirstAppRouterManage.r51 #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\fangxi1998\Desktop\课程设计\zigbee 嵌入式linux\zigbee最终\1\Zigbee-TempFireHumi\Texas Instruments\Projects\zstack\Samples\MyfirstAPP\Source\MyfirstAppRouterManage.c
      1          #include "OSAL_MyfirstAppRouter.h"
      2          #include "MyfirstApp.h"
      3          #include "OnBoard.h"

   \                                 In  segment SFR_AN, at 0x90
   \   union <unnamed> volatile __sfr _A_P1
   \                     _A_P1:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa0
   \   union <unnamed> volatile __sfr _A_P2
   \                     _A_P2:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
      4          #include "hal_led.h"
      5          #include "DS18B20.h"
      6          #include "GuangM.h"
      7          #include "Basic.h"
      8          #include "fire.h"
      9          #include "hongwai.h"
     10          #include "yanwu1.h"
     11          #include "oled.h"
     12          #define BEEP P2_0
     13          #define  myID  1
     14          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     15          unsigned char temh,teml;
   \                     temh:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     teml:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     16          unsigned char ch[10];
   \                     ch:
   \   000000                DS 10
   \   00000A                REQUIRE __INIT_XDATA_Z
     17          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     18          byte     My_TaskID;
   \                     My_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     19          uint8    TransID = 0;
   \                     TransID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     20          uint8    tmp_msg[9];
   \                     tmp_msg:
   \   000000                DS 9
   \   000009                REQUIRE __INIT_XDATA_Z
     21          //uint8    light_data[2]; 

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     22          uint8    light=0;
   \                     light:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
     23          
     24          //volatile static 

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     25          uint8 temperature=0, humi=0;
   \                     temperature:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     humi:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     26          uint16 uTempValue, uHumiValue;
   \                     uTempValue:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     uHumiValue:
   \   000000                DS 2
   \   000002                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     27          float fTempValue, fHumiValue;
   \                     fTempValue:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \                     fHumiValue:
   \   000000                DS 4
   \   000004                REQUIRE __INIT_XDATA_Z
     28          
     29          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     30          uint8    fire1=0;
   \                     fire1:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     31          afAddrType_t   multi_DstAddr;
   \                     multi_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     32          afAddrType_t   Single_DstAddr;
   \                     Single_DstAddr:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
     33          
     34          //存了当前节点的网络状态，我们将他初始化为'未加入网'

   \                                 In  segment XDATA_I, align 1, keep-with-next
     35          devStates_t  NwkState = DEV_INIT;
   \                     NwkState:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for NwkState>`
   \   000001                REQUIRE __INIT_XDATA_I
     36          
     37          void My_Task_Process_MSG ( afIncomingMSGPacket_t *msg );
     38          void Send_Message(void);
     39          
     40          //*************************************************
     41          //此任务的端点描述，它定义了此任务作为 ZigBee 应用程序对象的所有信息
     42          //我们将会在初始化函数中为它赋值。然后将他注册到应用程序框架中。

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     43          endPointDesc_t   My_EndPoint_Desc;
   \                     My_EndPoint_Desc:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     44          
     45          
     46          //保存了一个簇 ID 的列表 ， 所有有关于此任务的簇都需要在此定义

   \                                 In  segment XDATA_ROM_C, align 1
     47          const uint16 My_InCluster_List[MY_ENDPOINT_MAX_OUTCLUSTERS] =
   \                     My_InCluster_List:
   \   000000   0300         DW 3
   \   000002   0400         DW 4
   \   000004   0500         DW 5
   \   000006   0600         DW 6
     48          { 
     49            CLUSTER_1_ID,
     50            CLUSTER_2_ID,
     51            CLUSTER_3_ID,
     52            CLUSTER_4_ID
     53          };
     54          

   \                                 In  segment XDATA_ROM_C, align 1
     55          const uint16 My_OutCluster_List[MY_ENDPOINT_MAX_INCLUSTERS] =
   \                     My_OutCluster_List:
   \   000000   0300         DW 3
   \   000002   0400         DW 4
   \   000004   0500         DW 5
   \   000006   0600         DW 6
     56          { 
     57            CLUSTER_1_ID,
     58            CLUSTER_2_ID,
     59            CLUSTER_3_ID,
     60            CLUSTER_4_ID
     61          };
     62          
     63          //此端点的简单描述，它保存了此任务的一些基本信息

   \                                 In  segment XDATA_ROM_C, align 1
     64          const SimpleDescriptionFormat_t    My_EndPoint_SimpleDesc  =
   \                     My_EndPoint_SimpleDesc:
   \   000000   0F           DB 15
   \   000001   070F         DW 3847
   \   000003   0200         DW 2
   \   000005   00           DB 0
   \   000006   04           DB 4
   \   000007   ....         DW My_InCluster_List
   \   000009   04           DB 4
   \   00000A   ....         DW My_OutCluster_List
     65          {
     66               MY_ENDPOINT_NO,
     67               MY_ENDPOINT_PROFID,
     68               MY_ENDPOINT_DEVICEID,
     69               MY_ENDPOINT_DEVICE_VERSION,
     70               MY_ENDPOINT_FLAGS,
     71               MY_ENDPOINT_MAX_INCLUSTERS,
     72               (uint16*)My_InCluster_List,
     73               MY_ENDPOINT_MAX_OUTCLUSTERS,
     74               (uint16*)My_OutCluster_List
     75          };
     76               
     77          
     78          //********************************************************

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     79          void My_Task_Init( byte task_id )
   \                     My_Task_Init:
     80          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
     81            
     82              My_TaskID = task_id;
   \   000006   90....       MOV     DPTR,#My_TaskID
   \   000009   F0           MOVX    @DPTR,A
     83          
     84              //设置单播信息
     85              Single_DstAddr.addrMode = (afAddrMode_t)Addr16Bit;
   \   00000A   90....       MOV     DPTR,#Single_DstAddr + 8
   \   00000D   7402         MOV     A,#0x2
   \   00000F   F0           MOVX    @DPTR,A
     86              Single_DstAddr.endPoint = MY_ENDPOINT_NO;//15
   \   000010   A3           INC     DPTR
   \   000011   740F         MOV     A,#0xf
   \   000013   F0           MOVX    @DPTR,A
     87              Single_DstAddr.addr.shortAddr = 0x0000;//协调器默认短地址为0x0000
   \   000014   90....       MOV     DPTR,#Single_DstAddr
   \   000017   E4           CLR     A
   \   000018   F0           MOVX    @DPTR,A
   \   000019   A3           INC     DPTR
   \   00001A   F0           MOVX    @DPTR,A
     88              
     89              My_EndPoint_Desc.endPoint = MY_ENDPOINT_NO; //15
   \   00001B   90....       MOV     DPTR,#My_EndPoint_Desc
   \   00001E   740F         MOV     A,#0xf
   \   000020   F0           MOVX    @DPTR,A
     90              My_EndPoint_Desc.task_id = &My_TaskID;//用户任务ID
   \   000021   A3           INC     DPTR
   \   000022   74..         MOV     A,#My_TaskID & 0xff
   \   000024   F0           MOVX    @DPTR,A
   \   000025   A3           INC     DPTR
   \   000026   74..         MOV     A,#(My_TaskID >> 8) & 0xff
   \   000028   F0           MOVX    @DPTR,A
     91              My_EndPoint_Desc.simpleDesc = 
     92                  (SimpleDescriptionFormat_t*)&My_EndPoint_SimpleDesc;
   \   000029   A3           INC     DPTR
   \   00002A   74..         MOV     A,#My_EndPoint_SimpleDesc & 0xff
   \   00002C   F0           MOVX    @DPTR,A
   \   00002D   A3           INC     DPTR
   \   00002E   74..         MOV     A,#(My_EndPoint_SimpleDesc >> 8) & 0xff
   \   000030   F0           MOVX    @DPTR,A
     93              My_EndPoint_Desc.latencyReq = noLatencyReqs;
   \   000031   A3           INC     DPTR
   \   000032   E4           CLR     A
   \   000033   F0           MOVX    @DPTR,A
     94          
     95              afRegister(&My_EndPoint_Desc);
   \   000034                ; Setup parameters for call to function afRegister
   \   000034   7A..         MOV     R2,#My_EndPoint_Desc & 0xff
   \   000036   7B..         MOV     R3,#(My_EndPoint_Desc >> 8) & 0xff
   \   000038   12....       LCALL   ??afRegister?relay
     96              
     97              //InitADC();
     98              // P2INP&=~0X01;//上下拉模式
     99            //P2DIR|=0X01;//四个做输出
    100            //P2SEL&=~0X01;//通用p1.0 p1.1 p1.2 p1.3 
    101            //BEEP=1;
    102              
    103              
    104          }
   \   00003B   7F01         MOV     R7,#0x1
   \   00003D   02....       LJMP    ?BANKED_LEAVE_XDATA
    105          
    106          //**********************************************************

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    107          UINT16 My_Task_Process_Event(byte task_id,UINT16 events)
   \                     My_Task_Process_Event:
    108          {    //float light;
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
    109               //unsigned char adcdata[]="00.0% ";
    110              //当一个消息被发送给任务时,SYS_EVENT_MSG,事件会被传递给任务 
    111            
    112              //表示有一个消息等待处理。
    113              afIncomingMSGPacket_t *MSGpkt;
    114              if ( events & SYS_EVENT_MSG )
   \   000009   5480         ANL     A,#0x80
   \   00000B   6052         JZ      ??My_Task_Process_Event_0
    115              {
    116                  //从消息队列中取出消息
    117                  MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive(My_TaskID);
   \   00000D                ; Setup parameters for call to function osal_msg_receive
   \   00000D   800E         SJMP    ??My_Task_Process_Event_1
    118                  while ( MSGpkt )
    119                  {
    120                      switch ( MSGpkt->hdr.event )
    121                      {
    122                          /*
    123                          当设备成功加入网络以后， ZigBee 设备对象（ZDO）会给所有已经在应用程序框架中注册过的任务
    124                          （也就是作为 ZigBee 的应用程序对象存在的任务）发送一个ZDO_STATE_CHANGE消息，消息的状
    125                          态指示了当前网络的状态。
    126                          */
    127                      case ZDO_STATE_CHANGE://网络状态改变事件
    128                           NwkState = (devStates_t)MSGpkt->hdr.status;
    129                          if ( NwkState == DEV_END_DEVICE || NwkState == DEV_ROUTER )
    130                          {  
    131                              osal_start_timerEx(My_TaskID, TMP_MSG_EVT_ID, 4000);
    132                             // osal_start_timerEx(My_TaskID, FIRE_MSG_EVT_ID, 1000);//开启OSAL定时器，定时检测火焰标志
    133                          }
    134                          break;
    135                      case AF_INCOMING_MSG_CMD:  //模块接收到数据信息事件
    136                           My_Task_Process_MSG( MSGpkt );
   \                     ??My_Task_Process_Event_2:
   \   00000F                ; Setup parameters for call to function My_Task_Process_MSG
   \   00000F   AA..         MOV     R2,?V0 + 0
   \   000011   AB..         MOV     R3,?V0 + 1
   \   000013   12....       LCALL   ??My_Task_Process_MSG?relay
    137                           break;
    138                           
    139                      case KEY_CHANGE://按键事件
    140                         
    141                          break;
    142                     
    143                      default:
    144                          break;
    145                      }
    146                      //释放消息所在的消息缓冲区
    147                      osal_msg_deallocate( (uint8 *)MSGpkt );
   \                     ??My_Task_Process_Event_3:
   \   000016                ; Setup parameters for call to function osal_msg_deallocate
   \   000016   AA..         MOV     R2,?V0 + 0
   \   000018   AB..         MOV     R3,?V0 + 1
   \   00001A   12....       LCALL   ??osal_msg_deallocate?relay
    148                      MSGpkt = (afIncomingMSGPacket_t*)osal_msg_receive(My_TaskID);
   \   00001D                ; Setup parameters for call to function osal_msg_receive
   \                     ??My_Task_Process_Event_1:
   \   00001D   90....       MOV     DPTR,#My_TaskID
   \   000020   E0           MOVX    A,@DPTR
   \   000021   F9           MOV     R1,A
   \   000022   12....       LCALL   ??osal_msg_receive?relay
   \   000025   8A..         MOV     ?V0 + 0,R2
   \   000027   8B..         MOV     ?V0 + 1,R3
   \   000029   E5..         MOV     A,?V0 + 0
   \   00002B   45..         ORL     A,?V0 + 1
   \   00002D   6027         JZ      ??My_Task_Process_Event_4
   \   00002F   85..82       MOV     DPL,?V0 + 0
   \   000032   85..83       MOV     DPH,?V0 + 1
   \   000035   E0           MOVX    A,@DPTR
   \   000036   24E6         ADD     A,#-0x1a
   \   000038   60D5         JZ      ??My_Task_Process_Event_2
   \   00003A   2449         ADD     A,#0x49
   \   00003C   70D8         JNZ     ??My_Task_Process_Event_3
   \   00003E   A3           INC     DPTR
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   90....       MOV     DPTR,#NwkState
   \   000043   F0           MOVX    @DPTR,A
   \   000044   6406         XRL     A,#0x6
   \   000046   6005         JZ      ??My_Task_Process_Event_5
   \   000048   E0           MOVX    A,@DPTR
   \   000049   6407         XRL     A,#0x7
   \   00004B   70C9         JNZ     ??My_Task_Process_Event_3
   \                     ??My_Task_Process_Event_5:
   \   00004D                ; Setup parameters for call to function osal_start_timerEx
   \   00004D   7CA0         MOV     R4,#-0x60
   \   00004F   7D0F         MOV     R5,#0xf
   \   000051   12....       LCALL   ?Subroutine2 & 0xFFFF
    149                  }
   \                     ??CrossCallReturnLabel_4:
   \   000054   80C0         SJMP    ??My_Task_Process_Event_3
    150                  
    151                  return (events ^ SYS_EVENT_MSG);
   \                     ??My_Task_Process_Event_4:
   \   000056   EE           MOV     A,R6
   \   000057   FA           MOV     R2,A
   \   000058   EF           MOV     A,R7
   \   000059   6480         XRL     A,#0x80
   \                     ??My_Task_Process_Event_6:
   \   00005B   FB           MOV     R3,A
   \   00005C   02....       LJMP    ??My_Task_Process_Event_7 & 0xFFFF
    152              }
    153              
    154              //发送温度值的事件
    155            if(events & TMP_MSG_EVT_ID)  
   \                     ??My_Task_Process_Event_0:
   \   00005F   EE           MOV     A,R6
   \   000060   A2E0         MOV     C,0xE0 /* A   */.0
   \   000062   4003         JC      $+5
   \   000064   02....       LJMP    ??My_Task_Process_Event_8 & 0xFFFF
    156              {
    157                 
    158                  DS18B20_SendConvert();
   \   000067                ; Setup parameters for call to function DS18B20_SendConvert
   \   000067   12....       LCALL   ??DS18B20_SendConvert?relay
    159                  DS18B20_GetTem();
   \   00006A                ; Setup parameters for call to function DS18B20_GetTem
   \   00006A   12....       LCALL   ??DS18B20_GetTem?relay
    160                  getGuangM();
   \   00006D                ; Setup parameters for call to function getGuangM
   \   00006D   12....       LCALL   ??getGuangM?relay
    161                     
    162                  tmp_msg[0] = myID;
   \   000070   90....       MOV     DPTR,#tmp_msg
   \   000073   7401         MOV     A,#0x1
   \   000075   F0           MOVX    @DPTR,A
    163                  tmp_msg[1] = sensor_data_value[1];
   \   000076   90....       MOV     DPTR,#sensor_data_value + 1
   \   000079   E0           MOVX    A,@DPTR
   \   00007A   90....       MOV     DPTR,#tmp_msg + 1
   \   00007D   F0           MOVX    @DPTR,A
    164                  tmp_msg[2] = sensor_data_value[0];
   \   00007E   90....       MOV     DPTR,#sensor_data_value
   \   000081   E0           MOVX    A,@DPTR
   \   000082   90....       MOV     DPTR,#tmp_msg + 2
   \   000085   F0           MOVX    @DPTR,A
    165                  tmp_msg[3] =lightdata[0];//十位
   \   000086   90....       MOV     DPTR,#lightdata
   \   000089   E0           MOVX    A,@DPTR
   \   00008A   90....       MOV     DPTR,#tmp_msg + 3
   \   00008D   F0           MOVX    @DPTR,A
    166                  tmp_msg[4] = lightdata[1];//个位
   \   00008E   90....       MOV     DPTR,#lightdata + 1
   \   000091   E0           MOVX    A,@DPTR
   \   000092   90....       MOV     DPTR,#tmp_msg + 4
   \   000095   F0           MOVX    @DPTR,A
    167                  tmp_msg[5] =lightdata[3];//小数位 
   \   000096   90....       MOV     DPTR,#lightdata + 3
   \   000099   E0           MOVX    A,@DPTR
   \   00009A   90....       MOV     DPTR,#tmp_msg + 5
   \   00009D   F0           MOVX    @DPTR,A
    168          
    169                  
    170                  io_init();
   \   00009E                ; Setup parameters for call to function io_init
   \   00009E   12....       LCALL   ??io_init?relay
    171                  getfire();
   \   0000A1                ; Setup parameters for call to function getfire
   \   0000A1   12....       LCALL   ??getfire?relay
    172                  tmp_msg[6]=_a[0];
   \   0000A4   90....       MOV     DPTR,#_a
   \   0000A7   E0           MOVX    A,@DPTR
   \   0000A8   90....       MOV     DPTR,#tmp_msg + 6
   \   0000AB   F0           MOVX    @DPTR,A
    173                  
    174                  io_inithongwai();
   \   0000AC                ; Setup parameters for call to function io_inithongwai
   \   0000AC   12....       LCALL   ??io_inithongwai?relay
    175                  gethongwai();
   \   0000AF                ; Setup parameters for call to function gethongwai
   \   0000AF   12....       LCALL   ??gethongwai?relay
    176                  tmp_msg[7]=_b[0];
   \   0000B2   90....       MOV     DPTR,#_b
   \   0000B5   E0           MOVX    A,@DPTR
   \   0000B6   90....       MOV     DPTR,#tmp_msg + 7
   \   0000B9   F0           MOVX    @DPTR,A
    177                  
    178                  getyanwu();
   \   0000BA                ; Setup parameters for call to function getyanwu
   \   0000BA   12....       LCALL   ??getyanwu?relay
    179                  tmp_msg[8]=_data[0];
   \   0000BD   90....       MOV     DPTR,#_data
   \   0000C0   E0           MOVX    A,@DPTR
   \   0000C1   90....       MOV     DPTR,#tmp_msg + 8
   \   0000C4   F0           MOVX    @DPTR,A
    180                  
    181                  init_oled();
   \   0000C5                ; Setup parameters for call to function init_oled
   \   0000C5   12....       LCALL   ??init_oled?relay
    182                  teml = tmp_msg[2];
   \   0000C8   90....       MOV     DPTR,#tmp_msg + 2
   \   0000CB   E0           MOVX    A,@DPTR
   \   0000CC   90....       MOV     DPTR,#teml
   \   0000CF   F0           MOVX    @DPTR,A
    183                        //获取温度高位
    184                  temh = tmp_msg[1];
   \   0000D0   90....       MOV     DPTR,#tmp_msg + 1
   \   0000D3   E0           MOVX    A,@DPTR
   \   0000D4   90....       MOV     DPTR,#temh
   \   0000D7   F0           MOVX    @DPTR,A
    185                  if((temh/10%10==0)&&(temh/100==0))
   \   0000D8   75F00A       MOV     B,#0xa
   \   0000DB   84           DIV     AB
   \   0000DC   75F00A       MOV     B,#0xa
   \   0000DF   84           DIV     AB
   \   0000E0   A8F0         MOV     R0,B
   \   0000E2   E8           MOV     A,R0
   \   0000E3   700E         JNZ     ??My_Task_Process_Event_9
   \   0000E5   75F064       MOV     B,#0x64
   \   0000E8   E0           MOVX    A,@DPTR
   \   0000E9   84           DIV     AB
   \   0000EA   7007         JNZ     ??My_Task_Process_Event_9
    186                        ch[4]=' ';
   \   0000EC   90....       MOV     DPTR,#ch + 4
   \   0000EF   7420         MOV     A,#0x20
   \   0000F1   8006         SJMP    ??My_Task_Process_Event_10
    187                        else ch[4]=temh/10%10+0x30;
   \                     ??My_Task_Process_Event_9:
   \   0000F3   7430         MOV     A,#0x30
   \   0000F5   28           ADD     A,R0
   \   0000F6   90....       MOV     DPTR,#ch + 4
   \                     ??My_Task_Process_Event_10:
   \   0000F9   F0           MOVX    @DPTR,A
    188          
    189                        ch[5]=temh%10+0x30;
   \   0000FA   90....       MOV     DPTR,#temh
   \   0000FD   E0           MOVX    A,@DPTR
   \   0000FE   75F00A       MOV     B,#0xa
   \   000101   84           DIV     AB
   \   000102   E5F0         MOV     A,B
   \   000104   2430         ADD     A,#0x30
   \   000106   90....       MOV     DPTR,#ch + 5
   \   000109   F0           MOVX    @DPTR,A
    190                        //if(((ch[4]-'0')*10+(ch[5]-'0'))>=32)
    191                          //BEEP=0;
    192                        //else
    193                          //BEEP=1;
    194          
    195                   
    196                  Send_Message();
   \   00010A                ; Setup parameters for call to function Send_Message
   \   00010A   12....       LCALL   ??Send_Message?relay
    197                  HalLedBlink(HAL_LED_2,3,50,300);
   \   00010D                ; Setup parameters for call to function HalLedBlink
   \   00010D   7C2C         MOV     R4,#0x2c
   \   00010F   7D01         MOV     R5,#0x1
   \   000111   7B32         MOV     R3,#0x32
   \   000113   7A03         MOV     R2,#0x3
   \   000115   7902         MOV     R1,#0x2
   \   000117   12....       LCALL   ??HalLedBlink?relay
    198                  osal_start_timerEx(My_TaskID, TMP_MSG_EVT_ID, (2000+myID) );
   \   00011A                ; Setup parameters for call to function osal_start_timerEx
   \   00011A   7CD1         MOV     R4,#-0x2f
   \   00011C   7D07         MOV     R5,#0x7
   \   00011E   12....       LCALL   ?Subroutine2 & 0xFFFF
    199                  
    200                  return (events ^ TMP_MSG_EVT_ID);
   \                     ??CrossCallReturnLabel_5:
   \   000121   EE           MOV     A,R6
   \   000122   6401         XRL     A,#0x1
   \   000124   FA           MOV     R2,A
   \   000125   EF           MOV     A,R7
   \   000126   02....       LJMP    ??My_Task_Process_Event_6 & 0xFFFF
    201                  
    202              }
    203          
    204              
    205               //关闭蜂鸣器的事件
    206              if(events & BEEP_OFF_EVT_ID) 
   \                     ??My_Task_Process_Event_8:
   \   000129   5402         ANL     A,#0x2
   \   00012B   6005         JZ      ??My_Task_Process_Event_11
    207              {
    208                  BEEP_OFF;
   \   00012D   D2A0         SETB    0xa0.0
   \   00012F   53FFFE       ANL     0xff,#0xfe
    209              }
    210               
    211              return 0; 
   \                     ??My_Task_Process_Event_11:
   \   000132   7A00         MOV     R2,#0x0
   \   000134   7B00         MOV     R3,#0x0
   \                     ??My_Task_Process_Event_7:
   \   000136   7F04         MOV     R7,#0x4
   \   000138   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00013B                REQUIRE _A_P2
   \   00013B                REQUIRE P2DIR
    212          }

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7A01         MOV     R2,#0x1
   \   000002                REQUIRE ??Subroutine4_0
   \   000002                ; // Fall through to label ??Subroutine4_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine4_0:
   \   000000   7B00         MOV     R3,#0x0
   \   000002   90....       MOV     DPTR,#My_TaskID
   \   000005   E0           MOVX    A,@DPTR
   \   000006   F9           MOV     R1,A
   \   000007   12....       LCALL   ??osal_start_timerEx?relay
   \   00000A   22           RET
    213          
    214          //处理接收到的数据

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    215          void My_Task_Process_MSG ( afIncomingMSGPacket_t *msg )
   \                     My_Task_Process_MSG:
    216          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    217              switch ( msg->clusterId )
   \   000005   8A82         MOV     DPL,R2
   \   000007   8B83         MOV     DPH,R3
   \   000009   A3           INC     DPTR
   \   00000A   A3           INC     DPTR
   \   00000B   A3           INC     DPTR
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F5..         MOV     ?V0 + 0,A
   \   000010   A3           INC     DPTR
   \   000011   E0           MOVX    A,@DPTR
   \   000012   F5..         MOV     ?V0 + 1,A
   \   000014   78..         MOV     R0,#?V0 + 0
   \   000016   12....       LCALL   ?US_SWITCH_DENSE
   \                     `?<Jumptable for My_Task_Process_MSG>_0`:
   \   000019   0300         DW        3
   \   00001B   03           DB        3
   \   00001C   ....         DW        ??My_Task_Process_MSG_0
   \   00001E   ....         DW        ??My_Task_Process_MSG_1
   \   000020   ....         DW        ??My_Task_Process_MSG_1
   \   000022   ....         DW        ??My_Task_Process_MSG_2
   \   000024   ....         DW        ??My_Task_Process_MSG_3
    218              {
    219                   break;
    220              case CLUSTER_1_ID :
    221          
    222                   
    223              case CLUSTER_2_ID:
    224                   if(  ('O' == msg->cmd.Data[0])&&
    225                        ('P' == msg->cmd.Data[1])&&  
    226                        ('E' == msg->cmd.Data[2])&&
    227                        ('N' == msg->cmd.Data[3])    )
   \                     ??My_Task_Process_MSG_1:
   \   000026   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000029   703A         JNZ     ??My_Task_Process_MSG_4
   \   00002B   A3           INC     DPTR
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   6450         XRL     A,#0x50
   \   00002F   7034         JNZ     ??My_Task_Process_MSG_4
   \   000031   8882         MOV     DPL,R0
   \   000033   8983         MOV     DPH,R1
   \   000035   A3           INC     DPTR
   \   000036   A3           INC     DPTR
   \   000037   E0           MOVX    A,@DPTR
   \   000038   6445         XRL     A,#0x45
   \   00003A   7029         JNZ     ??My_Task_Process_MSG_4
   \   00003C   8882         MOV     DPL,R0
   \   00003E   8983         MOV     DPH,R1
   \   000040   A3           INC     DPTR
   \   000041   A3           INC     DPTR
   \   000042   A3           INC     DPTR
   \   000043   E0           MOVX    A,@DPTR
   \   000044   644E         XRL     A,#0x4e
   \   000046   701D         JNZ     ??My_Task_Process_MSG_4
    228                     
    229                     
    230                   {  HalLedBlink(HAL_LED_2,4,50,300);
   \   000048                ; Setup parameters for call to function HalLedBlink
   \   000048   7C2C         MOV     R4,#0x2c
   \   00004A   7D01         MOV     R5,#0x1
   \   00004C   7B32         MOV     R3,#0x32
   \   00004E   7A04         MOV     R2,#0x4
   \   000050   7902         MOV     R1,#0x2
   \   000052   12....       LCALL   ??HalLedBlink?relay
    231                      BEEP_ON;
   \   000055   43FF01       ORL     0xff,#0x1
   \   000058   C2A0         CLR     0xa0.0
    232                      
    233                      osal_start_timerEx(My_TaskID, BEEP_OFF_EVT_ID, 1000 );
   \   00005A                ; Setup parameters for call to function osal_start_timerEx
   \   00005A   7CE8         MOV     R4,#-0x18
   \   00005C   7D03         MOV     R5,#0x3
   \   00005E   7A02         MOV     R2,#0x2
   \   000060   12....       LCALL   ??Subroutine4_0 & 0xFFFF
    234                   }
   \                     ??CrossCallReturnLabel_6:
   \   000063   8053         SJMP    ??My_Task_Process_MSG_0
    235                   else if(  ('O' == msg->cmd.Data[0])&&
    236                           ('N' == msg->cmd.Data[1])   ){
   \                     ??My_Task_Process_MSG_4:
   \   000065   8882         MOV     DPL,R0
   \   000067   8983         MOV     DPH,R1
   \   000069   E0           MOVX    A,@DPTR
   \   00006A   644F         XRL     A,#0x4f
   \   00006C   700A         JNZ     ??My_Task_Process_MSG_3
   \   00006E   A3           INC     DPTR
   \   00006F   E0           MOVX    A,@DPTR
   \   000070   644E         XRL     A,#0x4e
   \   000072   7004         JNZ     ??My_Task_Process_MSG_3
    237                           
    238                           OLED=1;
   \                     ??My_Task_Process_MSG_5:
   \   000074   D295         SETB    0x90.5
   \   000076   8040         SJMP    ??My_Task_Process_MSG_0
    239                           
    240                           }
    241                   else if(  ('C' == msg->cmd.Data[0])&&
    242                        ('L' == msg->cmd.Data[1])&&  
    243                        ('O' == msg->cmd.Data[2])&&
    244                        ('S' == msg->cmd.Data[3]) &&
    245                        ('E' == msg->cmd.Data[4])   )
   \                     ??My_Task_Process_MSG_3:
   \   000078   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   00007B   6443         XRL     A,#0x43
   \   00007D   7039         JNZ     ??My_Task_Process_MSG_0
   \   00007F   A3           INC     DPTR
   \   000080   E0           MOVX    A,@DPTR
   \   000081   644C         XRL     A,#0x4c
   \   000083   7033         JNZ     ??My_Task_Process_MSG_0
   \   000085   8882         MOV     DPL,R0
   \   000087   8983         MOV     DPH,R1
   \   000089   A3           INC     DPTR
   \   00008A   A3           INC     DPTR
   \   00008B   E0           MOVX    A,@DPTR
   \   00008C   644F         XRL     A,#0x4f
   \   00008E   7028         JNZ     ??My_Task_Process_MSG_0
   \   000090   8882         MOV     DPL,R0
   \   000092   8983         MOV     DPH,R1
   \   000094   A3           INC     DPTR
   \   000095   A3           INC     DPTR
   \   000096   A3           INC     DPTR
   \   000097   E0           MOVX    A,@DPTR
   \   000098   6453         XRL     A,#0x53
   \   00009A   701C         JNZ     ??My_Task_Process_MSG_0
   \   00009C   8882         MOV     DPL,R0
   \   00009E   8983         MOV     DPH,R1
   \   0000A0   A3           INC     DPTR
   \   0000A1   A3           INC     DPTR
   \   0000A2   A3           INC     DPTR
   \   0000A3   A3           INC     DPTR
   \   0000A4   E0           MOVX    A,@DPTR
   \   0000A5   6445         XRL     A,#0x45
   \   0000A7   700F         JNZ     ??My_Task_Process_MSG_0
    246                     
    247                     {
    248                           
    249                           OLED=0;
   \   0000A9   C295         CLR     0x90.5
   \   0000AB   800B         SJMP    ??My_Task_Process_MSG_0
    250                           
    251                           }
    252          
    253                   break;
    254                case CLUSTER_3_ID:
    255                   if(  ('O' == msg->cmd.Data[0])&&
    256                        ('N' == msg->cmd.Data[1]))
   \                     ??My_Task_Process_MSG_2:
   \   0000AD   12....       LCALL   ?Subroutine1 & 0xFFFF
    257                     
    258                     
    259                   { 
    260                     
    261                     OLED=1;
    262                   }
    263          
    264                   break;
    265                    case CLUSTER_4_ID:
    266                   if(  ('C' == msg->cmd.Data[0])&&
    267                        ('L' == msg->cmd.Data[1])&&  
    268                        ('O' == msg->cmd.Data[2])&&
    269                        ('S' == msg->cmd.Data[3])&& 
    270                        ('E' == msg->cmd.Data[4]))
    271                     
    272                     
    273                   { 
    274                      OLED=0;
    275                   }
    276          
    277                   break;
    278                   
    279                   
    280                   
    281              default:  break;    
    282              }
   \                     ??CrossCallReturnLabel_1:
   \   0000B0   7006         JNZ     ??My_Task_Process_MSG_0
   \   0000B2   A3           INC     DPTR
   \   0000B3   E0           MOVX    A,@DPTR
   \   0000B4   644E         XRL     A,#0x4e
   \   0000B6   60BC         JZ      ??My_Task_Process_MSG_5
    283          }
   \                     ??My_Task_Process_MSG_0:
   \   0000B8                REQUIRE ?Subroutine0
   \   0000B8                REQUIRE P2DIR
   \   0000B8                REQUIRE _A_P2
   \   0000B8                REQUIRE _A_P1
   \   0000B8                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F02         MOV     R7,#0x2
   \   000002   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   000003   644F         XRL     A,#0x4f
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   EA           MOV     A,R2
   \   000001   2421         ADD     A,#0x21
   \   000003   F582         MOV     DPL,A
   \   000005   EB           MOV     A,R3
   \   000006   3400         ADDC    A,#0x0
   \   000008   F583         MOV     DPH,A
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   F8           MOV     R0,A
   \   00000C   A3           INC     DPTR
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F9           MOV     R1,A
   \   00000F   8882         MOV     DPL,R0
   \   000011   8983         MOV     DPH,R1
   \   000013   E0           MOVX    A,@DPTR
   \   000014   22           RET
    284          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    285          void Send_Message(void)
   \                     Send_Message:
    286          {
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
    287              AF_DataRequest( &Single_DstAddr,                //发送地址模式
    288                              &My_EndPoint_Desc,              //端点描述符
    289                              CLUSTER_1_ID,                   //簇ID
    290                              //(byte)osal_strlen(tmp_msg)+1,   //发送长度
    291                              11,
    292                              (byte *)tmp_msg,                //发送内容
    293                              & TransID,                      //帧序号
    294                              AF_DISCV_ROUTE,                 //发现路由
    295                              AF_DEFAULT_RADIUS);             //路由半径（默认16级）
   \   000005                ; Setup parameters for call to function AF_DataRequest
   \   000005   75..1E       MOV     ?V0 + 0,#0x1e
   \   000008   78..         MOV     R0,#?V0 + 0
   \   00000A   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00000D   75....       MOV     ?V0 + 0,#TransID & 0xff
   \   000010   75....       MOV     ?V0 + 1,#(TransID >> 8) & 0xff
   \   000013   78..         MOV     R0,#?V0 + 0
   \   000015   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000018   75....       MOV     ?V0 + 0,#tmp_msg & 0xff
   \   00001B   75....       MOV     ?V0 + 1,#(tmp_msg >> 8) & 0xff
   \   00001E   78..         MOV     R0,#?V0 + 0
   \   000020   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000023   75..0B       MOV     ?V0 + 0,#0xb
   \   000026   75..00       MOV     ?V0 + 1,#0x0
   \   000029   78..         MOV     R0,#?V0 + 0
   \   00002B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00002E   75..03       MOV     ?V0 + 0,#0x3
   \   000031   78..         MOV     R0,#?V0 + 0
   \   000033   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000036   7920         MOV     R1,#0x20
   \   000038   7C..         MOV     R4,#My_EndPoint_Desc & 0xff
   \   00003A   7D..         MOV     R5,#(My_EndPoint_Desc >> 8) & 0xff
   \   00003C   7A..         MOV     R2,#Single_DstAddr & 0xff
   \   00003E   7B..         MOV     R3,#(Single_DstAddr >> 8) & 0xff
   \   000040   12....       LCALL   ??AF_DataRequest?relay
   \   000043   7409         MOV     A,#0x9
   \   000045   12....       LCALL   ?DEALLOC_XSTACK8
    296          }
   \   000048   80..         SJMP    ?Subroutine0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for NwkState>`:
   \   000000   01           DB 1

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??My_Task_Init?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    My_Task_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??My_Task_Process_Event?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    My_Task_Process_Event

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??My_Task_Process_MSG?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    My_Task_Process_MSG

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??Send_Message?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Send_Message
    297          
    298          
    299          
    300          
    301          
    302          

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     My_Task_Init                 0      0      9
       -> afRegister              0      0     18
     My_Task_Process_Event        0      0     12
       -> osal_msg_receive        0      0     24
       -> My_Task_Process_MSG     0      0     24
       -> osal_msg_deallocate     0      0     24
       -> osal_msg_receive        0      0     24
       -> osal_start_timerEx      0      0     24
       -> DS18B20_SendConvert     0      0     24
       -> DS18B20_GetTem          0      0     24
       -> getGuangM               0      0     24
       -> io_init                 0      0     24
       -> getfire                 0      0     24
       -> io_inithongwai          0      0     24
       -> gethongwai              0      0     24
       -> getyanwu                0      0     24
       -> init_oled               0      0     24
       -> Send_Message            0      0     24
       -> HalLedBlink             0      0     24
       -> osal_start_timerEx      0      0     24
     My_Task_Process_MSG          0      0     22
       -> HalLedBlink             0      0     20
       -> osal_start_timerEx      0      0     20
     Send_Message                 0      0     31
       -> AF_DataRequest          0      0     38


   Segment part sizes:

     Function/Label                Bytes
     --------------                -----
     _A_P1                            1
     _A_P2                            1
     P2DIR                            1
     temh                             1
     teml                             1
     ch                              10
     My_TaskID                        1
     TransID                          1
     tmp_msg                          9
     light                            1
     temperature                      1
     humi                             1
     uTempValue                       2
     uHumiValue                       2
     fTempValue                       4
     fHumiValue                       4
     fire1                            1
     multi_DstAddr                   12
     Single_DstAddr                  12
     NwkState                         1
     My_EndPoint_Desc                 6
     My_InCluster_List                8
     My_OutCluster_List               8
     My_EndPoint_SimpleDesc          12
     My_Task_Init                    64
     My_Task_Process_Event          315
     ?Subroutine2                     2
     ??Subroutine4_0                 11
     My_Task_Process_MSG            184
     ?Subroutine0                     5
     ?Subroutine1                     6
     ?Subroutine3                    21
     Send_Message                    74
     ?<Initializer for NwkState>      1
     ??My_Task_Init?relay             6
     ??My_Task_Process_Event?relay    6
     ??My_Task_Process_MSG?relay      6
     ??Send_Message?relay             6

 
 682 bytes in segment BANKED_CODE
  24 bytes in segment BANK_RELAYS
   3 bytes in segment SFR_AN
   1 byte  in segment XDATA_I
   1 byte  in segment XDATA_ID
  28 bytes in segment XDATA_ROM_C
  69 bytes in segment XDATA_Z
 
 707 bytes of CODE  memory
  28 bytes of CONST memory
   0 bytes of DATA  memory (+ 3 bytes shared)
  70 bytes of XDATA memory

Errors: none
Warnings: none
